>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4], [5, 6]])
[[22, 28], [49, 64]]

>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "./matrix_mul.py", line 22, in matrix_mul
    raise ValueError('m_a and m_b can\'t be multiplied')
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2, 3], [4, 5, 6]])
[[9, 12, 15], [19, 26, 33], [29, 40, 51]]

>>> matrix_mul(1, [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list

>>> matrix_mul([1, 2], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list of lists

>>> matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
ValueError: m_a can't be empty

>>> matrix_mul([[1, 'a'], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: each row of m_a must be of the same size
